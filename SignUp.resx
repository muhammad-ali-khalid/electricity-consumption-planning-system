<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>